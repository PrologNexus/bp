Start = [ lower , Predicates, Start ] ;
Predicate = "." | ":-" , Body , "." ;
Predicates = Predicate | "(" , Terms , ")" , Predicate ;
Operator = "=" | "is" ;
Body = Expr2 , BodyOperator , BodyCont | "!" , BodyCont ;
BodyOperator = [ Operator , Expr2 ] ;
BodyCont = [ "," , Body ] ;
List = "[" , ListInner , "]" ;
ListInner = [ Terms, ListCons ] ;
ListCons = [ "|" , Expr2 ] ;
Terms = Expr2 , TermsCont ;
TermsCont = [ "," , Terms ];
TermLower = [ "(" , Terms , ")" ] ;
Expr2 = Expr1 , Expr2R
Expr2R = [ "+" , Expr1, Expr2R ] | [ "-" , Expr1, Expr2R ] ;
Expr1 = Expr , Expr1R
Expr1R = [ "*" , Expr, Expr1R ] | [ "/" , Expr, Expr1R ] ;
Expr = lower , TermLower | number | List | variable | "(" , Expr2 ")" ;

digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
number = digit , { digit } ;

uppercaseLetter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
                | "H" | "I" | "J" | "K" | "L" | "M" | "N"
                | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
                | "V" | "W" | "X" | "Y" | "Z" ;

lowercaseLetter = "a" | "b" | "c" | "d" | "e" | "f" | "g"
                | "h" | "i" | "j" | "k" | "l" | "m" | "n"
                | "o" | "p" | "q" | "r" | "s" | "t" | "u"
                | "v" | "w" | "x" | "y" | "z" ;

variable = uppercaseLetter , { uppercaseLetter | lowercaseLetter | digit } ;
lower = { "_" } , lowercaseLetter , { uppercaseLetter | lowercaseLetter | digit } ;